this->m_argc = 9
this->m_argv[0] = ./memInjector
this->m_argv[1] = -l
this->m_argv[2] = data
this->m_argv[3] = -m
this->m_argv[4] = random
this->m_argv[5] = -t
this->m_argv[6] = word_0
this->m_argv[7] = -e
this->m_argv[8] = ./top
now m_argc = 8, m_argv[0] = -l, m_argv[1] = data
read the Location : data
now m_argc = 7, m_argv[0] = -m, m_argv[1] = random
read the Mode : random
now m_argc = 6, m_argv[0] = -t, m_argv[1] = word_0
read the Type : word_0
now m_argc = 5, m_argv[0] = -e, m_argv[1] = ./top

BUG002--[memoryInjectorTool.cpp, CreateInjector, 76]--exe = ./top, address = 0x7fff0a03db70
The name of the process you want to inject is ./top == ./top

[memoryInjector.cpp, 452]--exe = ./top, inject fault into an excultable program

[memoryInjector.cpp, 462]--child pid = 4740

[memoryInjector.cpp, 468]--exe = ./top, pid = 4740 inject fault into an excultable program

[memoryInjector.cpp, 473]--start inject child process pid = 4740
There are1works will be done in table
[memoryInjector.cpp, 529]--location : stack, mode : random, type : word_0, 
==LOCATION==
[memoryInjector.cpp, 537]--bzero taskMMInfo success
